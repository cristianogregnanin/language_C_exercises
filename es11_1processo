#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAX_INPUT_LENGTH 100

int main(int argc, char **argv) {
if (argc != 2) {
printf("Numero argomenti sbagliato");
return 1;
}

char input[MAX_INPUT_LENGTH];
char argomento_grep[MAX_INPUT_LENGTH];
char pattern[MAX_INPUT_LENGTH];
char *articolo_iniziale;
char *articolo_finale;
size_t articolo_iniziale_len;
size_t articolo_finale_len;

printf("Inserisci l'articolo da cercare (ART. X): ");
fgets(input, MAX_INPUT_LENGTH, stdin);

while (strcmp(input, "esci\n") != 0) {
    articolo_iniziale = input;
    articolo_iniziale_len = strcspn(input, "1234567890");
    if (articolo_iniziale_len == strlen(input)) {
        printf("Input non valido. Inserisci l'articolo da cercare (ART. X): ");
        fgets(input, MAX_INPUT_LENGTH, stdin);
        continue;
    }
    articolo_iniziale[articolo_iniziale_len] = '\0';

    articolo_finale = input + articolo_iniziale_len;
    articolo_finale_len = strcspn(articolo_finale, ".") + 2;
    
    if (articolo_finale_len == 2) {
        printf("Input non valido. Inserisci l'articolo da cercare (ART. X): ");
        fgets(input, MAX_INPUT_LENGTH, stdin);
        continue;
    }
    
    articolo_finale[articolo_finale_len - 1] = '.';
    sprintf(argomento_grep, "'-P '(?<=^%s)(?s).*(?=%s)'", articolo_iniziale, articolo_finale);
    sprintf(pattern, "(?<=^%s)(?s).*(?=%s)", articolo_iniziale, articolo_finale);

    execl("/usr/bin/grep", "-z", "-o", argomento_grep, argv[1], (char *)0);
    perror("Errore");
    return 1;
}

return 0;
}
